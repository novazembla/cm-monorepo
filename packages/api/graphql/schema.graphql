### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  tokens: AuthPayloadTokens
  user: AuthUser
}

type AuthPayloadToken {
  expires: String!
  token: String
}

type AuthPayloadTokens {
  access: AuthPayloadToken
  refresh: AuthPayloadToken
}

type AuthUser {
  """Id of the user"""
  id: Int!

  """The permissions the user might have been given"""
  permissions: [String]

  """The roles the user might hold"""
  roles: [String]
}

type Mutation {
  login(data: UserLoginInput!): AuthPayload!
  userSignup(data: UserSignupInput!): AuthPayload!
}

type Query {
  users: [User]!
}

type User {
  email: String
  firstName: String
  id: Int!
  lastName: String
}

input UserLoginInput {
  email: String!
  password: String!
}

input UserSignupInput {
  acceptedTerms: Boolean!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}
