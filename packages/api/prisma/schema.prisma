// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int        @id @default(autoincrement())
  email          String     @unique
  firstName      String
  lastName       String
  role           String     @default("user")
  emailVerified Boolean    @default(false)
  acceptedTerms  Boolean    @default(false)
  userBanned     Boolean    @default(false)
  password       String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @default(now()) @updatedAt
  locations       Location[]
  tokens         Token[]
}

model Location {
  id          Int    @id @default(autoincrement())
  description String

  userId Int
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([userId], name: "indexLocationUserId")
}

model Token {
  id     Int    @id @default(autoincrement())
  token  String
  type   String @db.VarChar(16)
  userId Int
  user   User   @relation(fields: [userId], references: [id])
  expires     DateTime
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  @@index([userId], name: "indexTokenUserId")
}

model Setting {
  id     Int    @id @default(autoincrement())
  key    String @db.VarChar(128) @unique
  value   Json
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Taxonomy {
  id             Int        @id @default(autoincrement())
  hash           String     @db.VarChar(64) @unique
  name           Json     
  slug           Json     
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @default(now()) @updatedAt
  terms          Term[]
}

model Term {
  id             Int        @id @default(autoincrement())
  hash           String     @db.VarChar(64) @unique
  name           Json     
  slug           Json   

  taxonomyId     Int
  taxonomy       Taxonomy   @relation(fields: [taxonomyId], references: [id])

  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @default(now()) @updatedAt

  @@index([taxonomyId], name: "indexTernTaxonomyId")
}