
      # The name of this app. Must be unique within a project.
name: app

# The runtime the application uses. The 'type' key defines the base container
# image that will be used to run the application. There is a separate base
# container image for each primary language for the application,
# in multiple versions. Check the Node.js documentation
# (https://docs.platform.sh/languages/nodejs.html#supported-versions)
# to find the supported versions for the 'nodejs' type.
type: 'nodejs:16'
      
dependencies:
  nodejs:
    npm: "^7.24.1"
    
disk: 512

build:
    # Automatically run `npm install` on every build.
    flavor: default

hooks:
    # The build hook runs after Composer to finish preparing up your code.
    # No services are available but the disk is writeable.
    build: |
        set -e
        npx prisma generate
        npm run build:api

    # The deploy hook runs after your application has been deployed and started.
    # Code cannot be modified at this point but the database is available.
    # The site is not accepting requests while this script runs so keep it
    # fast.
    deploy: |
        set -e
        npx prisma migrate deploy

    # post_deploy: |
    #     set -e
    #     import_new_content.sh
    #     clear_cache.sh      

# The following block defines a single writable directory, 'web/uploads'
# The 'source' specifies where the writable mount is. The 'local' source
# indicates that the mount point will point to a local directory on the
# application container. The 'source_path' specifies the subdirectory
# from within the source that the mount should point at. 
mounts:
  'logs':
    source: local
    source_path: log
  'csv':
    source: service
    service: files
    source_path: csv
  'public/img':
    source: service
    service: files
    source_path: img
    

# The relationships of the application with services or other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form <service name>:<endpoint name>.
relationships:
    postgresdatabase: 'dbpostgres:postgresql'

web:
  commands: 
    start: "node apps/api/build/index.js"